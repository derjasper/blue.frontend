{
  "name": "grunt-stripcomments",
  "description": "Remove comments from production code",
  "version": "0.3.0",
  "homepage": "https://github.com/kkemple/grunt-stripcomments",
  "author": {
    "name": "Kurtis Kemple",
    "email": "kurtiskemple@gmail.com",
    "url": "http://kurtiskemple.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/kkemple/grunt-stripcomments"
  },
  "bugs": {
    "url": "https://github.com/kkemple/grunt-stripcomments/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/kkemple/grunt-stripcomments/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "strip",
    "comments",
    "strip comments",
    "remove",
    "remove comments"
  ],
  "readme": "# grunt-stripcomments\n\n> Remove comments from production ready code\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-stripcomments --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-stripcomments');\n```\n\n## The \"comments\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `comments` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  comments: {\n    your_target: {\n      // Target-specific file lists and/or options go here.\n      options: {\n          singleline: true,\n          multiline: true\n      },\n      src: [ 'src/*.js'] // files to remove comments from\n    },\n  },\n});\n```\n\n### Options\n\n#### options.singleline\nType: `Boolean`\nDefault value: `true`\n\nDetermines whether or not to remove single line comments\n\n#### options.multiline\nType: `Boolean`\nDefault value: `true`\n\nDetermines whether or not to remove multi line comments\n\n### Usage Examples\n\n```js\ngrunt.initConfig({\n  comments: {\n    js: {\n      options: {\n        singleline: true,\n        multiline: false\n      },\n      src: [ 'src/*.js' ]\n    },\n    php: {\n      options: {\n        singleline: true,\n        multiline: true\n      },\n      src: [ 'lib/*.php' ]\n    }\n  },\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\nv 0.1.0 - alpha release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-stripcomments@0.3.0",
  "_from": "grunt-stripcomments@~0.3.0"
}
