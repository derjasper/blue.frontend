@mixin container($width:auto,$height:auto,$flags...) {
    display:block;
    
    @if (length($flags)==0) {
        $flags:(center);
    }
    
    // position
    $positionType: regular;
    @if index($flags,absolute) {
        position:absolute;
        $positionType: alt;
    } 
    @else if index($flags,fixed) {
        position:fixed;
        $positionType: alt;
    }
    @else {
        position:relative;
    }                                                       
    
    
    *zoom:1;

    &:before, &:after {
	content:"";
	display:table;
    }
    &:after {
        clear:both;
    }
    
    // width and height
    @if $width!=auto or index($flags,width) {
        @if length($width)==2 and nth($width,1)==nth($width,2) {
            width: $container*nth($width,1);
        }
        @else {
            width: 100%;
        }
    }
    
    @if $height!=auto or index($flags,height) {
        @if length($height)==2 and nth($height,1)==nth($height,2) {
            height: $container*nth($height,1);
        }
        @else {
            height: 100%;
        }
    }
        
    @if $width!=auto {
        @if (length($width)==1) {
            max-width: $container*$width;
        }
        @else {
            @if nth($width,1)!=auto {
                min-width: $container*nth($width,1);
            }
            @if nth($width,2)!=auto {
                max-width: $container*nth($width,2);
            }
        }
    }
    
    @if $height!=auto {
        @if (length($height)==1) {
            max-height: $container*$height;
        }
        @else {
            @if nth($height,1)!=auto {
                min-height: $container*nth($height,1);
            }
            @if nth($height,2)!=auto {
                max-height: $container*nth($height,2);
            }
        }
    }  
    
    // alignment
    $align-transform-x:0;
    $align-transform-y:0;
    
    @if index($flags,left) {
        @if $positionType==regular {
            margin-left:0;
            margin-right:auto;
        }
        @else {
            $align-transform-x: 0;
            left:0;
            right:auto;
        }
    } 
    @if index($flags,center) {
        @if $positionType==regular {
            margin-left:auto;
            margin-right:auto;
        }
        @else {
            left: 50%;
            $align-transform-x: -50%;
            
            // unused alternative; only works with fixed width
            //left:0;
            //right:0;
            //margin-left:auto;
            //margin-right:auto;
        }
    }
    @if index($flags,right) {
        @if $positionType==regular {
            margin-left:auto;
            margin-right:0;
        }
        @else {
            $align-transform-x: 0;
            left:auto;
            right:0;
        }
    }
    @if index($flags,top) {
        @if $positionType==regular {
            $align-transform-y: 0%;
            top:0%;
        }
        @else {
            $align-transform-y: 0;
            top:0;
            bottom:auto;
        }
    } 
    @if index($flags,middle) {
        top: 50%;
        $align-transform-y: -50%;
        
        // unused alternative; only works with fixed height and not for regular positioning
        //top:0;
        //bottom:0;
        //margin-top:auto;
        //margin-bottom:auto;
    } 
    @if index($flags,bottom) {
        @if $positionType==regular {
            top:100%;
            $align-transform-y: -100%;
        }
        @else {
            $align-transform-y: 0%;
            top:auto;
            bottom:0;
        }
    }
    @if index($flags,outer-top) {
        @if $positionType==regular {
            top:auto;
            bottom:auto;
            $align-transform-y: -100%;
        }
        @else {
            top:auto;
            bottom:100%;
        }
    }
    @if index($flags,outer-bottom) {
        @if $positionType==regular {
            top:100%;
            bottom:auto;
        }
        @else {
            top:100%;
            bottom:auto;
        }
    }
    @if index($flags,outer-left) {
        @if $positionType==regular {
            left:auto;
            right:auto;
            $align-transform-x: -100%;
        }
        @else {
            left:auto;
            right:100%;
        }
    }
    @if index($flags,outer-right) {
        @if $positionType==regular {
            left:100%;
            right:auto;
        }
        @else {
            left:100%;
            right:auto;
        }
    }
    
    // translate; includes a workaround that transform creates a new stacking context and z-index does not work as most devs expect
    // don't know why it works, it may happen that behaviour is unexpected (please submit a bug report if this applies)
    // we will look for a better solution in a future release
    transform:translate3D($align-transform-x,$align-transform-y,-1px);
    transform-style: flat;
}

@include predefine("container") {
    @include container();
}

// convience mixins, use with care
@mixin container-spacing($spacing...) {
    $spacing:multiply-list($gutter,$spacing);    
    margin:$spacing;
}
@mixin container-breakout($spacing...) {
    $spacing:multiply-list(-$gutter,$spacing);    
    margin:$spacing;
}